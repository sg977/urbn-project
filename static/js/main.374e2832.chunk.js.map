{"version":3,"sources":["components/MapAutoAomplete/index.js","components/Marker/index.js","components/Card/index.js","components/Timer/index.js","pages/Discover.js","components/Banner/index.js","pages/Home.js","components/Navbar/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["MapAutoComplete","props","onSelect","value","state","geoCoderService","geocode","address","response","location","geometry","addMarker","lat","lng","markerName","handleSearch","autoCompleteService","phillyLatLng","length","searchQuery","input","radius","getQueryPredictions","options","map","resp","description","console","log","setState","suggestions","suggestionts","this","style","width","onSearch","placeholder","autoComplete","Component","Marker","name","key","className","EnvironmentTwoTone","Card","distanceText","openNow","photoUrl","priceLevel","rating","timeText","src","alt","character","Timer","onChange","text","min","max","defaultValue","PHILLY","Discover","updateConstraintName","event","preventDefault","oldConstraints","constraints","Object","assign","target","updateConstraintTime","time","oldMarkers","markers","newMarker","i","window","alert","push","apiHasLoaded","mapsApi","mapsLoaded","LatLng","places","AutocompleteService","placesService","PlacesService","Geocoder","directionService","DirectionsService","filteredResults","marker","timeLimit","markerLatLng","placesRequest","type","query","rankBy","RankBy","DISTANCE","textSearch","responseLimit","Math","restaurant","formatted_address","price_level","opening_hours","open_now","photos","getUrl","directionRequest","origin","destination","travelMode","route","result","status","travellingRoute","routes","legs","duration","distance","searchResults","constraint","id","margin","size","onClick","height","resetBoundsOnResize","defaultCenter","center","defaultZoom","zoom","bootstrapURLKeys","process","libraries","maps","Banner","backgroundImage","children","Home","span","Navbar","ghost","title","subTitle","extra","HomeOutlined","to","pathname","SearchOutlined","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.374e2832.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AutoComplete } from 'antd';\n\nclass MapAutoComplete extends Component {\n  constructor(props) {\n      // using super to have full access to parent constructor\n    super(props);\n    this.state = {\n      suggestions: [],\n      options: [{}],\n      phillyLatLng: this.props.phillyLatLng,\n      // from google api\n      autoCompleteService: this.props.autoCompleteService,\n      geoCoderService: this.props.geoCoderService,\n    }\n    console.log(\"this is OG state\", this.state.suggestionts);\n  }\n\n  onSelect = ((value) => {\n    this.state.geoCoderService.geocode({ address: value }, ((response) => {\n      //example response \n      // \"geometry\" : {\n      //   \"location\" : {\n      //      \"lat\" : 37.4267861,\n      //      \"lng\" : -122.0806032\n      //   }\n      const { location } = response[0].geometry;\n      // locate the marker\n      this.props.addMarker(location.lat(), location.lng(), this.props.markerName);\n    }))\n  });\n\n\n  // Runs a search on the current value \n  handleSearch = ((value) => {\n    const { autoCompleteService, phillyLatLng } = this.state;\n    // Search when input is not empty\n    if (value.length > 0) {\n      const searchQuery = {\n        input: value,\n        location: phillyLatLng,\n        radius: 30000, // With a 30km radius\n      };\n      autoCompleteService.getQueryPredictions(searchQuery, ((response) => {\n        // The name of each GoogleMaps suggestion object is in the \"description\" field\n        if (response) { \n          // description is the address in response\n          const options = response.map((resp) => resp.description);\n          console.log(options);\n          this.setState(options);\n          this.setState({ suggestions:response })\n          console.log(\"this is autocomplete\", this.state)\n        }\n      }));\n    }\n  });\n\n  render() {\n    const { options } = this.state; //set state again before rendering\n    // this is an emtpy array\n    console.log(\"this is render\", options)\n    return (\n      <AutoComplete\n        style={{ width: 200 }}\n        options={options}\n        onSelect={this.onSelect}\n        onSearch={this.handleSearch}\n        placeholder=\"Address\"\n        autoComplete=\"on\"\n      />\n    );\n  }\n}\n\nexport default MapAutoComplete;\n","import React from 'react';\nimport { EnvironmentTwoTone } from '@ant-design/icons';\n\nconst Marker = (({ name, key }) => {\n  return (\n    <div key={key}>\n      <span className=\"brand-red\">{name}</span>\n      <EnvironmentTwoTone />\n    </div>\n  );\n});\n\nexport default Marker;\n","import React from 'react';\nimport { Rate } from 'antd';\n// card to render places\nconst Card = (({ value, key }) => {\n    // informaiton from google api\n  const { address, distanceText, name, openNow, photoUrl, priceLevel, rating, timeText } = value;\n  return (\n    <div key={key} className=\"col-3 w-100 mx-4 my-4\">\n      <img src={photoUrl} className=\"image-wrapper-sm mb-2\" alt=\"ice-cream\" />\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name}</h5>\n          <span className=\"d-block mb-1\">{address}</span>\n          <span className=\"d-block\">{distanceText}</span>\n          <span className=\"d-block\">{timeText}</span>\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          {openNow ?\n            <li className=\"list-group-item\">Open</li>\n            :\n            <li className=\"list-group-item\">Closed</li>\n          }\n          <li className=\"list-group-item\">Rating - <Rate value={rating} /></li>\n          <li className=\"list-group-item\">Price - <Rate value={priceLevel} character=\"$\" /></li>\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nexport default Card;","import React from 'react';\nimport \"./style.css\";\nimport { InputNumber } from 'antd';\n\nconst Timer = (({ value, onChange, text }) => {\n  return (\n    <section className=\"d-flex flex-column\" >\n        <InputNumber min={0} max={60} defaultValue={0} value={value} onChange={onChange} />\n      <span className=\"text-center\">{text}</span>\n    </section >\n  );\n});\n\nexport default Timer;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapAutoComplete from '../components/MapAutoAomplete';\nimport Marker from '../components/Marker';\nimport Card from '../components/Card';\nimport Timer from '../components/Timer';\n\nimport { Button, Input, Divider} from 'antd';\n\n// google api key\nconst apiKey = process.env.REACT_APP_API_KEY;\n// default is Philly\nconst PHILLY = { lat: 39.9525, lng:  -75.1652};\n// set up initial state for the parent\nclass Discover extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      constraints: [{ name: '', time: 0 }], //get this back correctly\n      searchResults: [],\n      mapsLoaded: false,\n      markers: [],\n      map: {},\n      mapsApi: {},\n      phillyLatLng: {},\n      autoCompleteService: {},\n      placesService: {},\n      geoCoderService: {},\n      directionService: {},\n    };\n  }\n\n  // Update name for constraint\n  updateConstraintName = ((event, key) => {\n    event.preventDefault();\n    const oldConstraints = this.state.constraints;\n    const constraints = Object.assign([], oldConstraints);\n    constraints[key].name = event.target.value;\n    this.setState({ constraints });\n    // it's working\n    // window.alert('name is updated')\n  });\n\n  // Updates distace for constraint\n  updateConstraintTime = ((key, value) => {\n    const oldConstraints = this.state.constraints;\n    const constraints = Object.assign([], oldConstraints);\n    constraints[key].time = value;\n    this.setState({ constraints });\n    // it's wokring\n    // window.alert('time is updated')\n  });\n\n  // Adds new marker if it does not exist\n  addMarker = ((lat, lng, name) => {\n    const oldMarkers = this.state.markers;\n    const markers = Object.assign([], oldMarkers);\n\n    // If name already exists in marker, just update\n    let newMarker = true;\n    // not working\n    // window.alert('New Location!')\n    for (let i = 0; i < markers.length; i++) {\n      if (markers[i].name === name) {\n        newMarker = false;\n        markers[i].lat = lat;\n        markers[i].lng = lng;\n        window.alert(`Updated \"${name}\" Marker`);\n        break;\n      }\n    }\n    // Name does not exist in marker list. Create new marker\n    if (newMarker) {\n        // check if it is push to the new array\n      markers.push({ lat, lng, name });\n      window.alert(`Added new \"${name}\" Marker`);\n    }\n// set state for the newMarker\n    this.setState({ markers });\n  });\n\n  // Runs once when the Google Maps library is ready\n  // Initializes all services that we need\n  apiHasLoaded = ((map, mapsApi) => {\n    this.setState({\n      mapsLoaded: true,\n      map,\n      mapsApi,\n      phillyLatLng: new mapsApi.LatLng(PHILLY.lat, PHILLY.lng),\n      autoCompleteService: new mapsApi.places.AutocompleteService(),\n      placesService: new mapsApi.places.PlacesService(map),\n      geoCoderService: new mapsApi.Geocoder(),\n      directionService: new mapsApi.DirectionsService(),\n    });\n  });\n\n  // Find resturants based on constraints\n  handleSearch = (() => {\n    const { markers, constraints, placesService, directionService, mapsApi } = this.state;\n    console.log(this.state)\n    if (markers.length === 0) {\n      window.alert('CONSTRAINT NOT VALID');\n      return;\n    }\n\n    const filteredResults = [];\n    const marker = markers[0];\n    const timeLimit = constraints[0].time;\n    const markerLatLng = new mapsApi.LatLng(marker.lat, marker.lng);\n\n    const placesRequest = {\n      location: markerLatLng,\n      type: ['restaurant', 'cafe'],\n      query: 'restaurant',\n      rankBy: mapsApi.places.RankBy.DISTANCE,\n    };\n\n    // Look for all resturants \n    placesService.textSearch(placesRequest, ((response) => {\n      // Only look at the nearest top 5.\n      const responseLimit = Math.min(5, response.length);\n      for (let i = 0; i < responseLimit; i++) {\n        const restaurant = response[i];\n        const { rating, name } = restaurant;\n        const address = restaurant.formatted_address;\n        const priceLevel = restaurant.price_level;\n        let photoUrl = '';\n        let openNow = false;\n        if (restaurant.opening_hours) {\n          openNow = restaurant.opening_hours.open_now; // e.g true/false\n        }\n        // sometime there is no photo\n        if (restaurant.photos && restaurant.photos.length > 0) {\n          photoUrl = restaurant.photos[0].getUrl();\n        }\n\n        // Second,check if each resturant is within travelling distance\n        const directionRequest = {\n          origin: markerLatLng,\n          destination: address, // Address of resturant\n          travelMode: 'DRIVING',\n        }\n\n        directionService.route(directionRequest, ((result, status) => {\n          if (status !== 'OK') { return }\n          const travellingRoute = result.routes[0].legs[0]; // { duration: { text: 1mins, value: 600 } }\n          const travellingTimeInMinutes = travellingRoute.duration.value / 60;\n          if (travellingTimeInMinutes < timeLimit) {\n            const distanceText = travellingRoute.distance.text; // km\n            const timeText = travellingRoute.duration.text; // mins\n            filteredResults.push({\n              name,\n              rating,\n              address,\n              openNow,\n              priceLevel,\n              photoUrl,\n              distanceText,\n              timeText,\n            });\n          }\n          // Final results, then add then back to result \n          this.setState({ searchResults: filteredResults });\n        }));\n      }\n    }));\n  });\n\n  render() {\n    const { constraints, mapsLoaded, phillyLatLng, markers, searchResults } = this.state;\n    const { autoCompleteService, geoCoderService } = this.state; // Google Maps Services\n    return (\n      <div className=\"w-100 d-flex py-4 flex-wrap justify-content-center\">\n        {/* Constraints section */}\n        <section className=\"col-4\">\n          {mapsLoaded ?\n            <div>\n              {constraints.map((constraint, key) => {\n                // set the name and time\n                const { name, time } = constraint;\n                return (\n                  <div key={key} className=\"mb-4\"> \n                    <div id='input' style={{ margin: 50 }} >\n                    {/* name should be updated */}\n                      <Input style={{ width: 200 }} placeholder=\"Name\" onChange={(event) => this.updateConstraintName(event, key)} />\n                      {/* Autocomplete call is working, but not input is submitted */}\n                      <MapAutoComplete\n                        autoCompleteService={autoCompleteService}\n                        geoCoderService={geoCoderService}\n                        phillyLatLng={phillyLatLng}\n                        markerName={name}\n                        addMarker={this.addMarker}\n                      />\n                    <Timer\n                      value={time}\n                      onChange={(value) => this.updateConstraintTime(key, value)}\n                      text=\"Search Between 0-60mins\"\n                    />\n                    <Divider />\n                     {/* Search Button */}\n                    <Button className=\"mt-4 fw-md\" type=\"primary\" size=\"large\" onClick={this.handleSearch}>Search!</Button> \n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            : null\n          }\n        </section>\n\n          {/* api works, map disply correctly */}\n        <section className=\"col-12\">\n          <GoogleMapReact\n            style={{height: '500px'}}\n            resetBoundsOnResize={true}\n            defaultCenter={this.props.center}\n            defaultZoom={this.props.zoom}\n            bootstrapURLKeys={{\n              key: apiKey,\n              libraries: ['places', 'directions']\n            }}\n            defaultZoom={11}\n            defaultCenter={{ lat: PHILLY.lat, lng: PHILLY.lng }}\n            yesIWantToUseGoogleMapApiInternals={true}\n            onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)} // \"maps\" is the mapApi\n          >\n            {/* Pin markers on the Map*/}\n            {markers.map((marker, key) => {\n              const { name, lat, lng } = marker;\n              return (\n                <Marker key={key} name={name} lat={lat} lng={lng} />\n              );\n            })}\n          </GoogleMapReact>\n        </section>\n\n        {/* Results section */}\n        {searchResults.length > 0 ?\n          <>\n            <Divider />\n            <section className=\"col-12\">\n              <div className=\"d-flex flex-column justify-content-center\">\n                <h1 className=\"mb-4 fw-md\">Tadah! Ice-Creams!</h1>\n                <div className=\"d-flex flex-wrap\">\n                  {searchResults.map((result, key) => (\n                    <Card value={result} key={key} />\n                  ))}\n                </div>\n              </div>\n            </section>\n          </>\n        // if nothing, return null\n          : null}\n      </div>\n    )\n  }\n}\n\nexport default Discover;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Banner(props) {\n  return (\n    <div className=\"banner text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\nimport Banner from \"../components/Banner\";\nimport { Row, Col } from 'antd';\n\nfunction Home() {\n  return (\n    <div>\n      <Banner backgroundImage=\"https://media.bizj.us/view/img/10959464/gettyimages-855959836*1200xx5500-3106-0-84.jpg\">\n        <h1>Eat Out</h1>\n      </Banner>\n        <Row>\n          <Col span={12}>\n            <h1>Welcome To EAT OUT</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc aliquet diam tortor, id\n              consequat mauris ullamcorper eu. Orci varius natoque penatibus et magnis dis\n              parturient montes, nascetur ridiculus mus. Pellentesque et dui id justo finibus\n              sollicitudin at et metus. Ut feugiat tellus nec metus commodo, sed suscipit nisi\n              gravida. Duis eget vestibulum quam, ut porttitor sem. Donec sagittis mi sollicitudin\n              turpis semper, et interdum risus lobortis. Vestibulum suscipit nunc non egestas\n              tristique. Proin hendrerit efficitur malesuada. Mauris lorem urna, sodales accumsan\n              quam non, tristique tempor erat. Nullam non sem facilisis, tempus tortor sit amet,\n              volutpat nisl. Ut et turpis non nunc maximus mollis a vitae tortor. Pellentesque\n              mattis risus ac quam laoreet cursus. Praesent suscipit orci neque, vestibulum\n              tincidunt augue tincidunt non. Duis consequat mattis tortor vitae mattis.\n            </p>\n          </Col>\n        </Row>\n    </div>\n  );\n}\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PageHeader, Button } from 'antd';\nimport { HomeOutlined, SearchOutlined } from '@ant-design/icons';\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n<div className=\"site-page-header-ghost-wrapper\">\n    <PageHeader\n      ghost={false}\n      title=\"Eat Out\"\n      subTitle=\"Life After Qurantine\"\n      extra={[\n          <button type=\"primary\">\n            <HomeOutlined />\n            <Link\n            to=\"/urbn-project\"\n            className={\n            window.location.pathname === \"/urbn-project\" || window.location.pathname === \"/urbn-project\"\n              ? \"nav-link active\"\n              : \"nav-link\"\n            }\n        >\n        Home\n            </Link>\n            </button>,\n\n        <Button>\n            <SearchOutlined />\n            <Link\n            to=\"/urbn-project/discover\"\n            className={window.location.pathname === \"/urbn-project/discover\" ? \"nav-link active\" : \"nav-link\"}\n            >\n        Discover\n            </Link>\n        </Button>\n      ]}\n    >\n    </PageHeader>\n  </div>\n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>@Coco Guo 2021</span>\n    </footer>\n  );\n}\n\nexport default Footer;","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Discover from \"./pages/Discover\";\nimport Home from './pages/Home';\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n// finally got antd style\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n          <Route exact path=\"/urbn-project\" component={Home} />\n          <Route exact path=\"/urbn-project/about\" component={Home} />\n          <Route exact path=\"/urbn-project/discover\" component={Discover} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}